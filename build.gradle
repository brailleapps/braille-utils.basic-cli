plugins {
	id 'java'
	id 'maven-publish'
	id 'signing'
}

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'
javadoc {
	options.encoding = 'UTF-8'
	options.links('http://docs.oracle.com/javase/8/docs/api/');
}
sourceCompatibility = '1.8'
targetCompatibility = '1.8'

def repoRevision = System.getenv("REPO_REVISION")!=null?System.getenv("REPO_REVISION"):repositoryRevision

group = "org.daisy.streamline"

sourceSets {
	main {	java { srcDir 'src' }	resources { srcDir 'src' } }
	test {	java { srcDir 'test' }	resources { srcDir 'test' } }
}

jar {
	doFirst {
		manifest {
	    	attributes (
	    	'Automatic-Module-Name': "$moduleName",
	    	'Built-By': System.getProperty("user.name"),
	    	'Built-On': new Date().format('yyyy-MM-dd'),
			'Repository-Revision': "$repoRevision",
			'Implementation-Title': "$releaseName",
			'Implementation-Version': version,
			'Implementation-URL': "$repositoryURL",
			'Include-Resource': 'LICENSE, NOTICE',
			//'Class-Path': configurations.compile.collect { it.getName() }.join(' ')					//'${core.classpath.attribute}'
			)
		}
	}
	from sourceSets.main.allJava
}

repositories {
	mavenCentral()
	//mavenLocal()
	//maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
}

dependencies {
	testImplementation group: 'junit', name: 'junit', version: '4.7'
	testImplementation "org.mockito:mockito-core:1.10.19"
}

task javadocJar(type: Jar) {
	classifier = 'javadoc'
	from javadoc
}

task sourcesJar(type: Jar) {
	classifier = 'sources'
	from sourceSets.main.allSource
}

ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

signing {
	required { isReleaseVersion }
	sign publishing.publications
}

publishing {
	//Only upload if a git hash is supplied. On Travis only upload snapshots.
	//enabled = repoRevision.size()==40 && System.getenv("TRAVIS_BUILD_ID")!=null
	publications {
		maven(MavenPublication) {
			from components.java
			artifact sourcesJar
			artifact javadocJar
			/*
			if (isReleaseVersion) {
				beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
			}*/
			pom {
				name = 'streamline-cli'
				packaging = 'jar'
				description = 'Streamline CLI'
				url = "$repositoryURL"
				scm {
					connection = "$repositorySCM"
					developerConnection = "$repositorySCM"
					url = "$repositoryURL"
				}
				licenses {
					license {
						name = 'LGPL'
						url = 'http://www.gnu.org/licenses/lgpl.html'
					}
				}
				developers {
					developer {
						id = 'joel'
						name = 'Joel HÃ¥kansson'
					}
				}
			}
		}
	}
	repositories {
		maven {
			def stagingRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
			def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
			url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : stagingRepoUrl
			credentials {
				username = sonatypeUsername
				password = sonatypePassword
			}
		}
	}
}

wrapper {
	distributionType = Wrapper.DistributionType.ALL
}
